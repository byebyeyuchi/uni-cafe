{"ast":null,"code":"import _slicedToArray from \"/Users/yuqiliu/Desktop/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yuqiliu/Desktop/jojo/client/src/context/alert/AlertState.js\";\n\nimport React, { useReducer } from \"react\";\nimport { v4 } from \"uuid\";\nimport AlertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\";\nimport { SET_ALERT, REMOVE_ALERT, SET_SUCCESS, REMOVE_SUCCESS } from \"../type\";\n\nvar AlertState = function AlertState(props) {\n  var initialState = {\n    alerts: [],\n    success: []\n  };\n\n  var _useReducer = useReducer(alertReducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1]; // set alert\n\n\n  var setAlert = function setAlert(msg, type) {\n    var id = v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg: msg,\n        type: type,\n        id: id\n      }\n    });\n    setTimeout(function () {\n      return dispatch({\n        type: REMOVE_ALERT,\n        payload: id\n      });\n    }, 5000);\n  }; // set success alert \n\n\n  var setSuccess = function setSuccess(msg) {\n    var id = v4();\n    dispatch({\n      type: SET_SUCCESS,\n      payload: {\n        msg: msg,\n        id: id\n      }\n    });\n    console.log(\"LERT\");\n    setTimeout(function () {\n      return dispatch({\n        type: REMOVE_SUCCESS,\n        payload: id\n      });\n    }, 5000);\n  };\n\n  return /*#__PURE__*/React.createElement(AlertContext.Provider, {\n    value: {\n      success: state.success,\n      alerts: state.alerts,\n      setAlert: setAlert,\n      setSuccess: setSuccess\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/yuqiliu/Desktop/jojo/client/src/context/alert/AlertState.js"],"names":["React","useReducer","v4","AlertContext","alertReducer","SET_ALERT","REMOVE_ALERT","SET_SUCCESS","REMOVE_SUCCESS","AlertState","props","initialState","alerts","success","state","dispatch","setAlert","msg","type","id","payload","setTimeout","setSuccess","console","log","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,WAAlC,EAA+CC,cAA/C,QAAqE,SAArE;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC3B,MAAMC,YAAY,GAAG;AAClBC,IAAAA,MAAM,EAAE,EADU;AAElBC,IAAAA,OAAO,EAAE;AAFS,GAArB;;AAD2B,oBAKDZ,UAAU,CAACG,YAAD,EAAeO,YAAf,CALT;AAAA;AAAA,MAKpBG,KALoB;AAAA,MAKbC,QALa,oBAO3B;;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAMC,IAAN,EAAe;AAC7B,QAAMC,EAAE,GAAGjB,EAAE,EAAb;AACAa,IAAAA,QAAQ,CAAC;AACNG,MAAAA,IAAI,EAAEb,SADA;AAENe,MAAAA,OAAO,EAAE;AAAEH,QAAAA,GAAG,EAAHA,GAAF;AAAOC,QAAAA,IAAI,EAAJA,IAAP;AAAaC,QAAAA,EAAE,EAAFA;AAAb;AAFH,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC;AAAA,aAAMN,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEZ,YAAR;AAAsBc,QAAAA,OAAO,EAAED;AAA/B,OAAD,CAAd;AAAA,KAAD,EAAsD,IAAtD,CAAV;AACF,GAPD,CAR2B,CAiB3B;;;AACA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAACL,GAAD,EAAS;AACzB,QAAME,EAAE,GAAGjB,EAAE,EAAb;AACAa,IAAAA,QAAQ,CAAC;AACNG,MAAAA,IAAI,EAAEX,WADA;AAENa,MAAAA,OAAO,EAAE;AAAEH,QAAAA,GAAG,EAAHA,GAAF;AAAOE,QAAAA,EAAE,EAAFA;AAAP;AAFH,KAAD,CAAR;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAH,IAAAA,UAAU,CAAC;AAAA,aAAMN,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEV,cAAR;AAAwBY,QAAAA,OAAO,EAAED;AAAjC,OAAD,CAAd;AAAA,KAAD,EAAwD,IAAxD,CAAV;AACF,GARD;;AAUA,sBACG,oBAAC,YAAD,CAAc,QAAd;AACG,IAAA,KAAK,EAAE;AACJN,MAAAA,OAAO,EAAEC,KAAK,CAACD,OADX;AAEJD,MAAAA,MAAM,EAAEE,KAAK,CAACF,MAFV;AAGJI,MAAAA,QAAQ,EAARA,QAHI;AAIJM,MAAAA,UAAU,EAAVA;AAJI,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQIZ,KAAK,CAACe,QARV,CADH;AAYF,CAxCD;;AAyCA,eAAehB,UAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport { v4 } from \"uuid\";\nimport AlertContext from \"./alertContext\";\nimport alertReducer from \"./alertReducer\";\nimport { SET_ALERT, REMOVE_ALERT, SET_SUCCESS, REMOVE_SUCCESS } from \"../type\";\n\nconst AlertState = (props) => {\n   const initialState = {\n      alerts: [],\n      success: [],\n   };\n   const [state, dispatch] = useReducer(alertReducer, initialState);\n\n   // set alert\n   const setAlert = (msg, type) => {\n      const id = v4();\n      dispatch({\n         type: SET_ALERT,\n         payload: { msg, type, id },\n      });\n      setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\n   };\n\n   // set success alert \n   const setSuccess = (msg) => {\n      const id = v4();\n      dispatch({\n         type: SET_SUCCESS,\n         payload: { msg, id },\n      });\n      console.log(\"LERT\")\n      setTimeout(() => dispatch({ type: REMOVE_SUCCESS, payload: id }), 5000);\n   };\n\n   return (\n      <AlertContext.Provider\n         value={{\n            success: state.success,\n            alerts: state.alerts,\n            setAlert,\n            setSuccess,\n         }}\n      >\n         {props.children}\n      </AlertContext.Provider>\n   );\n};\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}