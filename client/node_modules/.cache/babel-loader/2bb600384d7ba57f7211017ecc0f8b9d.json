{"ast":null,"code":"import _toConsumableArray from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_POST,ADD_POST,DELETE_POST,POST_ERROR,SET_CURRENT,CLEAR_CURRENT,UPDATE_POST,GET_USER_POST}from\"../type\";export default(function(state,action){switch(action.type){case GET_POST:return _objectSpread(_objectSpread({},state),{},{posts:action.payload,loading:false});case GET_USER_POST:return _objectSpread(_objectSpread({},state),{},{userPosts:action.payload,loading:false});case ADD_POST:return _objectSpread(_objectSpread({},state),{},{loading:false,posts:[action.payload].concat(_toConsumableArray(state.posts))});case UPDATE_POST:return _objectSpread(_objectSpread({},state),{},{loading:false,posts:state.posts.map(function(post){return post._id===action.payload._id?action.payload:post;})});case DELETE_POST:return _objectSpread(_objectSpread({},state),{},{loading:false,posts:state.posts.filter(function(post){return post._id!==action.payload;})});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case POST_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}});","map":{"version":3,"sources":["/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/src/context/post/postReducer.js"],"names":["GET_POST","ADD_POST","DELETE_POST","POST_ERROR","SET_CURRENT","CLEAR_CURRENT","UPDATE_POST","GET_USER_POST","state","action","type","posts","payload","loading","userPosts","map","post","_id","filter","current","error"],"mappings":"yVAAA,OACGA,QADH,CAEGC,QAFH,CAGGC,WAHH,CAIGC,UAJH,CAKGC,WALH,CAMGC,aANH,CAOGC,WAPH,CAQGC,aARH,KASO,SATP,CAWA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/B,OAAQA,MAAM,CAACC,IAAf,EACG,IAAKV,CAAAA,QAAL,CACG,sCACMQ,KADN,MAEGG,KAAK,CAAEF,MAAM,CAACG,OAFjB,CAGGC,OAAO,CAAE,KAHZ,GAMA,IAAKN,CAAAA,aAAL,CACA,sCACMC,KADN,MAEGM,SAAS,CAAEL,MAAM,CAACG,OAFrB,CAGGC,OAAO,CAAE,KAHZ,GAMH,IAAKZ,CAAAA,QAAL,CACG,sCACMO,KADN,MAEGK,OAAO,CAAE,KAFZ,CAGGF,KAAK,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,KAA5B,EAHR,GAKH,IAAKL,CAAAA,WAAL,CACG,sCACME,KADN,MAEGK,OAAO,CAAE,KAFZ,CAGGF,KAAK,CAAEH,KAAK,CAACG,KAAN,CAAYI,GAAZ,CAAgB,SAACC,IAAD,QACpBA,CAAAA,IAAI,CAACC,GAAL,GAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,CAAkCR,MAAM,CAACG,OAAzC,CAAmDI,IAD/B,EAAhB,CAHV,GAOH,IAAKd,CAAAA,WAAL,CACG,sCACMM,KADN,MAEGK,OAAO,CAAE,KAFZ,CAGGF,KAAK,CAAEH,KAAK,CAACG,KAAN,CAAYO,MAAZ,CAAmB,SAACF,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaR,MAAM,CAACG,OAA9B,EAAnB,CAHV,GAKH,IAAKR,CAAAA,WAAL,CACG,sCACMI,KADN,MAEGW,OAAO,CAAEV,MAAM,CAACG,OAFnB,GAIH,IAAKP,CAAAA,aAAL,CACG,sCACMG,KADN,MAEGW,OAAO,CAAE,IAFZ,GAIH,IAAKhB,CAAAA,UAAL,CACG,sCACMK,KADN,MAEGY,KAAK,CAAEX,MAAM,CAACG,OAFjB,GAKH,QACG,MAAOJ,CAAAA,KAAP,CApDN,CAsDF,CAvDD","sourcesContent":["import {\n   GET_POST,\n   ADD_POST,\n   DELETE_POST,\n   POST_ERROR,\n   SET_CURRENT,\n   CLEAR_CURRENT,\n   UPDATE_POST,\n   GET_USER_POST\n} from \"../type\";\n\nexport default (state, action) => {\n   switch (action.type) {\n      case GET_POST:\n         return {\n            ...state,\n            posts: action.payload,\n            loading: false,\n         };\n\n         case GET_USER_POST:\n         return {\n            ...state,\n            userPosts: action.payload,\n            loading: false,\n         };\n\n      case ADD_POST:\n         return {\n            ...state,\n            loading: false,\n            posts: [action.payload, ...state.posts],\n         };\n      case UPDATE_POST:\n         return {\n            ...state,\n            loading: false,\n            posts: state.posts.map((post) =>\n               post._id === action.payload._id ? action.payload : post\n            ),\n         };\n      case DELETE_POST:\n         return {\n            ...state,\n            loading: false,\n            posts: state.posts.filter((post) => post._id !== action.payload),\n         };\n      case SET_CURRENT:\n         return {\n            ...state,\n            current: action.payload,\n         };\n      case CLEAR_CURRENT:\n         return {\n            ...state,\n            current: null,\n         };\n      case POST_ERROR:\n         return {\n            ...state,\n            error: action.payload,\n         };\n\n      default:\n         return state;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}