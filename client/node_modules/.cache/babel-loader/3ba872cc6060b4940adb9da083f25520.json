{"ast":null,"code":"import _defineProperty from \"/Users/yuqiliu/Desktop/react-project/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yuqiliu/Desktop/react-project/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/yuqiliu/Desktop/react-project/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yuqiliu/Desktop/react-project/jojo/client/src/pages/RegisterPage/RegisterPage.js\";\n\nimport React, { useState, useContext, useEffect } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\"; // core components\n\nimport Header from \"../../components/Header/Header.js\";\nimport HomeLinks from \"../../components/Header/HomeLinks.js\";\nimport HeaderLinks from \"../../components/Header/HeaderLinks.js\";\nimport Footer from \"../../components/Footer/Footer.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport Button from \"../../components/CustomButtons/Button.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardFooter from \"../../components/Card/CardFooter.js\";\nimport CustomInput from \"../../components/CustomInput/CustomInput.js\";\nimport styles from \"../../assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"../../assets/img/755382.png\"; // context\n\nimport AuthContext from \"../../context/auth/authContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\nvar useStyles = makeStyles(styles);\n\nvar RegisterPage = function RegisterPage(props) {\n  var authContext = useContext(AuthContext);\n  var register = authContext.register,\n      error = authContext.error,\n      clearErrors = authContext.clearErrors,\n      isAuthenticated = authContext.isAuthenticated;\n  var alertContext = useContext(AlertContext);\n  var setAlert = alertContext.setAlert;\n  useEffect(function () {\n    if (isAuthenticated) {\n      props.history.push(\"/landing-page\"); // redirect to home page if authenticated\n    }\n\n    if (error === \"User already exists\") {\n      setAlert(error, \"error\");\n      clearErrors();\n    } //eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var name = user.name,\n      email = user.email,\n      password = user.password,\n      password2 = user.password2;\n\n  var validateEmail = function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  var onChange = function onChange(e) {\n    setUser(_objectSpread(_objectSpread({}, user), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    if (name === \"\" || email === \"\" || password === \"\") setAlert(\"Please enter all fileds\", \"warning\");else if (password.length < 6) setAlert(\"Password length must not be shorter than 6 digits\", \"warning\");else if (password !== password2) setAlert(\"Password do not match\", \"warning\");else {\n      register({\n        name: name,\n        email: email,\n        password: password\n      });\n    }\n  };\n\n  var _React$useState = React.useState(\"cardHidden\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cardAnimaton = _React$useState2[0],\n      setCardAnimation = _React$useState2[1];\n\n  setTimeout(function () {\n    setCardAnimation(\"\");\n  }, 700);\n  var classes = useStyles();\n  var rest = Object.assign({}, props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, Object.assign({\n    absolute: true,\n    color: \"transparent\",\n    brand: \"JOJO\",\n    leftLinks: /*#__PURE__*/React.createElement(HomeLinks, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 24\n      }\n    }),\n    rightLinks: /*#__PURE__*/React.createElement(HeaderLinks, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    })\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageHeader,\n    style: {\n      backgroundImage: \"url(\" + image + \")\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"top center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    xs: 12,\n    sm: 12,\n    md: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes[cardAnimaton],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    color: \"info\",\n    className: classes.cardHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 31\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 28\n    }\n  }, \"\\u30B4\\u30B4\\u30B4\\u30B4\\u30B4\\u30B4\\u30B4\\u30B4...\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"Name...\",\n    id: \"first\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"text\",\n      name: \"name\",\n      onChange: onChange,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 40\n        }\n      }, /*#__PURE__*/React.createElement(People, {\n        className: classes.inputIconsColor,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 43\n        }\n      }))\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"Email...\",\n    id: \"email\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"email\",\n      name: \"email\",\n      onChange: onChange,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 40\n        }\n      }, /*#__PURE__*/React.createElement(Email, {\n        className: classes.inputIconsColor,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 43\n        }\n      }))\n    },\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"password\",\n    onChange: onChange,\n    labelText: \"Password\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"password\",\n      name: \"password\",\n      onChange: onChange,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 40\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.inputIconsColor,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 43\n        }\n      }, \"lock_outline\")),\n      autoComplete: \"off\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(CustomInput, {\n    id: \"password2\",\n    labelText: \"Confirm Password\",\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      type: \"password\",\n      name: \"password2\",\n      onChange: onChange,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 40\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: classes.inputIconsColor,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 43\n        }\n      }, \"lock_outline\")),\n      autoComplete: \"off\"\n    },\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(CardFooter, {\n    className: classes.cardFooter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    simple: true,\n    color: \"info\",\n    size: \"lg\",\n    onClick: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 31\n    }\n  }, \"Get started\"))))))), /*#__PURE__*/React.createElement(Footer, {\n    whiteFont: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/yuqiliu/Desktop/react-project/jojo/client/src/pages/RegisterPage/RegisterPage.js"],"names":["React","useState","useContext","useEffect","makeStyles","InputAdornment","Icon","Email","People","Header","HomeLinks","HeaderLinks","Footer","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","styles","image","AuthContext","AlertContext","useStyles","RegisterPage","props","authContext","register","error","clearErrors","isAuthenticated","alertContext","setAlert","history","push","name","email","password","password2","user","setUser","validateEmail","re","test","String","toLowerCase","onChange","e","target","value","onSubmit","preventDefault","length","cardAnimaton","setCardAnimation","setTimeout","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","divider","fullWidth","type","endAdornment","inputIconsColor","autoComplete","cardFooter"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\nimport People from \"@material-ui/icons/People\";\n// core components\nimport Header from \"../../components/Header/Header.js\";\nimport HomeLinks from \"../../components/Header/HomeLinks.js\";\nimport HeaderLinks from \"../../components/Header/HeaderLinks.js\";\nimport Footer from \"../../components/Footer/Footer.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport Button from \"../../components/CustomButtons/Button.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardFooter from \"../../components/Card/CardFooter.js\";\nimport CustomInput from \"../../components/CustomInput/CustomInput.js\";\n\nimport styles from \"../../assets/jss/material-kit-react/views/loginPage.js\";\n\nimport image from \"../../assets/img/755382.png\";\n\n// context\nimport AuthContext from \"../../context/auth/authContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst useStyles = makeStyles(styles);\n\nconst RegisterPage = (props) => {\n   const authContext = useContext(AuthContext);\n   const { register, error, clearErrors, isAuthenticated } = authContext;\n   const alertContext = useContext(AlertContext);\n   const { setAlert } = alertContext;\n\n   useEffect(() => {\n      if (isAuthenticated) {\n         props.history.push(\"/landing-page\"); // redirect to home page if authenticated\n      }\n      if (error === \"User already exists\") {\n         setAlert(error, \"error\");\n         clearErrors();\n      }\n      //eslint-disable-next-line\n   }, [error, isAuthenticated, props.history]);\n\n   const [user, setUser] = useState({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n   });\n   const { name, email, password, password2 } = user;\n\n   const validateEmail = (email) => {\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n   }\n\n   const onChange = (e) => {\n      setUser({ ...user, [e.target.name]: e.target.value });\n   };\n\n   const onSubmit = (e) => {\n      e.preventDefault();\n      if (name === \"\" || email === \"\" || password === \"\")\n         setAlert(\"Please enter all fileds\", \"warning\");\n      else if (password.length < 6)\n         setAlert(\n            \"Password length must not be shorter than 6 digits\",\n            \"warning\"\n         );\n      else if (password !== password2)\n         setAlert(\"Password do not match\", \"warning\");\n      else {\n         register({\n            name,\n            email,\n            password,\n         });\n      }\n   };\n\n   const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n   setTimeout(function () {\n      setCardAnimation(\"\");\n   }, 700);\n   const classes = useStyles();\n   const { ...rest } = props;\n   return (\n      <div>\n         <Header\n            absolute\n            color=\"transparent\"\n            brand=\"JOJO\"\n            leftLinks={<HomeLinks />}\n            rightLinks={<HeaderLinks />}\n            {...rest}\n         />\n         {/* background */}\n         <div\n            className={classes.pageHeader}\n            style={{\n               backgroundImage: \"url(\" + image + \")\",\n               backgroundSize: \"cover\",\n               backgroundPosition: \"top center\",\n            }}\n         >\n            <div className={classes.container}>\n               <GridContainer justify=\"center\">\n                  <GridItem xs={12} sm={12} md={4}>\n                     <Card className={classes[cardAnimaton]}>\n                        <form className={classes.form} onSubmit={onSubmit}>\n                           <CardHeader\n                              color=\"info\"\n                              className={classes.cardHeader}\n                           >\n                              <h4>Register</h4>\n                           </CardHeader>\n                           <p className={classes.divider}>\n                              ゴゴゴゴゴゴゴゴ...\n                           </p>\n                           <CardBody>\n                              <CustomInput\n                                 labelText=\"Name...\"\n                                 id=\"first\"\n                                 formControlProps={{\n                                    fullWidth: true,\n                                 }}\n                                 inputProps={{\n                                    type: \"text\",\n                                    name: \"name\",\n                                    onChange: onChange,\n                                    endAdornment: (\n                                       <InputAdornment position=\"end\">\n                                          <People\n                                             className={classes.inputIconsColor}\n                                          />\n                                       </InputAdornment>\n                                    ),\n                                 }}\n                              />\n                              <CustomInput\n                                 labelText=\"Email...\"\n                                 id=\"email\"\n                                 formControlProps={{\n                                    fullWidth: true,\n                                 }}\n                                 inputProps={{\n                                    type: \"email\",\n                                    name: \"email\",\n                                    onChange: onChange,\n                                    endAdornment: (\n                                       <InputAdornment position=\"end\">\n                                          <Email\n                                             className={classes.inputIconsColor}\n                                          />\n                                       </InputAdornment>\n                                    ),\n                                 }}\n                                 onChange={onChange}\n                              />\n                              <CustomInput\n                                 id=\"password\"\n                                 onChange={onChange}\n                                 labelText=\"Password\"\n                                 formControlProps={{\n                                    fullWidth: true,\n                                 }}\n                                 inputProps={{\n                                    type: \"password\",\n                                    name: \"password\",\n                                    onChange: onChange,\n                                    endAdornment: (\n                                       <InputAdornment position=\"end\">\n                                          <Icon\n                                             className={classes.inputIconsColor}\n                                          >\n                                             lock_outline\n                                          </Icon>\n                                       </InputAdornment>\n                                    ),\n                                    autoComplete: \"off\",\n                                 }}\n                              />\n                              <CustomInput\n                                 id=\"password2\"\n                                 labelText=\"Confirm Password\"\n                                 formControlProps={{\n                                    fullWidth: true,\n                                 }}\n                                 inputProps={{\n                                    type: \"password\",\n                                    name: \"password2\",\n                                    onChange: onChange,\n                                    endAdornment: (\n                                       <InputAdornment position=\"end\">\n                                          <Icon\n                                             className={classes.inputIconsColor}\n                                          >\n                                             lock_outline\n                                          </Icon>\n                                       </InputAdornment>\n                                    ),\n                                    autoComplete: \"off\",\n                                 }}\n                                 onChange={onChange}\n                              />\n                           </CardBody>\n                           <CardFooter className={classes.cardFooter}>\n                              <Button\n                                 simple\n                                 color=\"info\"\n                                 size=\"lg\"\n                                 onClick={onSubmit}\n                              >\n                                 Get started\n                              </Button>\n                           </CardFooter>\n                        </form>\n                     </Card>\n                  </GridItem>\n               </GridContainer>\n            </div>\n            <Footer whiteFont />\n         </div>\n      </div>\n   );\n};\n\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}