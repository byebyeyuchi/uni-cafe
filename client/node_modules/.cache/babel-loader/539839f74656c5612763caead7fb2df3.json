{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yuqiliu/Desktop/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yuqiliu/Desktop/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/yuqiliu/Desktop/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yuqiliu/Desktop/jojo/client/src/context/post/PostState.js\";\n\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport PostContext from \"./postContext\";\nimport PostReducer from \"./postReducer\";\nimport { GET_POST, ADD_POST, DELETE_POST, POST_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_POST } from \"../type\";\n\nvar PostState = function PostState(props) {\n  var initialState = {\n    posts: [],\n    userPosts: [],\n    current: null,\n    error: null,\n    loading: true\n  };\n\n  var _useReducer = useReducer(PostReducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1]; // get public posts\n\n\n  var getPost = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"/api/posts\");\n\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: GET_POST,\n                payload: res.data\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: _context.t0.response.msg\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function getPost() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // add post\n\n\n  var addPost = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(post) {\n      var config, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.post(\"/api/posts\", post, config);\n\n            case 4:\n              res = _context2.sent;\n              dispatch({\n                type: ADD_POST,\n                payload: res.data\n              });\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: POST_ERROR,\n                payload: _context2.t0.response.msg\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function addPost(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // update post \n\n\n  var updatePost = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(post) {\n      var config, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              _context3.prev = 1;\n              _context3.next = 4;\n              return axios.put(\"/api/posts/\".concat(post._id), post, config);\n\n            case 4:\n              res = _context3.sent;\n              dispatch({\n                type: UPDATE_POST,\n                payload: res.data\n              });\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              dispatch({\n                type: POST_ERROR,\n                payload: _context3.t0.response.msg\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    return function updatePost(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // delete post\n\n\n  var deletePost = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios[\"delete\"](\"/api/posts/\".concat(id));\n\n            case 3:\n              res = _context4.sent;\n              dispatch({\n                type: DELETE_POST,\n                payload: id\n              });\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: _context4.t0.response.msg\n              });\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function deletePost(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var setCurrent = function setCurrent(post) {\n    dispatch({\n      type: SET_CURRENT,\n      payload: post\n    });\n  };\n\n  var clearCurrent = function clearCurrent() {\n    return dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(PostContext.Provider, {\n    value: {\n      posts: state.posts,\n      userPosts: state.userPosts,\n      current: state.current,\n      error: state.error,\n      loading: state.loading,\n      getPost: getPost,\n      addPost: addPost,\n      deletePost: deletePost,\n      updatePost: updatePost,\n      setCurrent: setCurrent,\n      clearCurrent: clearCurrent\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, props.children);\n};\n\nexport default PostState;","map":{"version":3,"sources":["/Users/yuqiliu/Desktop/jojo/client/src/context/post/PostState.js"],"names":["React","useReducer","axios","PostContext","PostReducer","GET_POST","ADD_POST","DELETE_POST","POST_ERROR","SET_CURRENT","CLEAR_CURRENT","UPDATE_POST","PostState","props","initialState","posts","userPosts","current","error","loading","state","dispatch","getPost","get","res","type","payload","data","response","msg","addPost","post","config","headers","updatePost","put","_id","deletePost","id","setCurrent","clearCurrent","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport PostContext from \"./postContext\";\nimport PostReducer from \"./postReducer\";\nimport {\n   GET_POST,\n   ADD_POST,\n   DELETE_POST,\n   POST_ERROR,\n   SET_CURRENT,\n   CLEAR_CURRENT,\n   UPDATE_POST\n} from \"../type\";\n\nconst PostState = (props) => {\n   const initialState = {\n      posts: [],\n      userPosts: [],\n      current: null,\n      error: null,\n      loading: true,\n   };\n\n   const [state, dispatch] = useReducer(PostReducer, initialState);\n\n   // get public posts\n   const getPost = async () => {\n      try {\n         const res = await axios.get(\"/api/posts\");   \n         dispatch({\n            type: GET_POST,\n            payload: res.data,\n         });\n      } catch (err) {\n         dispatch({\n            type: POST_ERROR,\n            payload: err.response.msg\n         });\n      }\n   };\n\n   // add post\n   const addPost = async (post) => {\n      const config = {\n         headers: {\n            \"Content-Type\": \"application/json\",\n         },\n      };\n      try {\n         const res = await axios.post(\"/api/posts\", post, config);\n         dispatch({\n            type: ADD_POST,\n            payload: res.data,\n         });\n      } catch (err) {\n         dispatch({\n            type: POST_ERROR,\n            payload: err.response.msg,\n         });\n      }\n   };\n\n   // update post \n   const updatePost = async (post) => {\n      const config = {\n         headers: {\n            \"Content-Type\": \"application/json\",\n         },\n      };\n      try {\n         const res = await axios.put(`/api/posts/${post._id}`, post, config);\n         dispatch({\n            type: UPDATE_POST,\n            payload: res.data,\n         });\n      } catch (err) {\n         dispatch({\n            type: POST_ERROR,\n            payload: err.response.msg,\n         });\n      }\n   };\n\n\n   // delete post\n   const deletePost = async (id) => {\n      try {\n         const res = await axios.delete(`/api/posts/${id}`);\n         dispatch({\n            type: DELETE_POST,\n            payload: id,\n         });\n      } catch (err) {\n         dispatch({\n            type: POST_ERROR,\n            payload: err.response.msg,\n         });\n      }\n   };\n\n   const setCurrent = (post) => {\n      dispatch({\n         type: SET_CURRENT,\n         payload: post,\n      });\n   }\n   const clearCurrent = () => dispatch({type:CLEAR_CURRENT});\n\n   return (\n      <PostContext.Provider\n         value={{\n            posts: state.posts,\n            userPosts: state.userPosts,\n            current: state.current,\n            error: state.error,\n            loading: state.loading,\n            getPost,\n            addPost,\n            deletePost,\n            updatePost,\n            setCurrent,\n            clearCurrent\n         }}\n      >\n         {props.children}\n      </PostContext.Provider>\n   );\n};\n\nexport default PostState;\n"]},"metadata":{},"sourceType":"module"}