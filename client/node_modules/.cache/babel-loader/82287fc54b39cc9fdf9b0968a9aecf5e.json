{"ast":null,"code":"import _toConsumableArray from \"/Users/yuqiliu/Desktop/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/yuqiliu/Desktop/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { SET_ALERT, REMOVE_ALERT, SET_SUCCESS, REMOVE_SUCCESS } from \"../type\";\nexport default (function (state, action) {\n  switch (action.type) {\n    case SET_ALERT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        alerts: [].concat(_toConsumableArray(state.alerts), [action.payload])\n      });\n\n    case REMOVE_ALERT:\n      return state.filter(function (alert) {\n        return alert.id !== action.payload;\n      });\n\n    case SET_SUCCESS:\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case REMOVE_SUCCESS:\n      return state.filter(function (alert) {\n        return alert.id !== action.payload;\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/yuqiliu/Desktop/jojo/client/src/context/alert/alertReducer.js"],"names":["SET_ALERT","REMOVE_ALERT","SET_SUCCESS","REMOVE_SUCCESS","state","action","type","alerts","payload","filter","alert","id"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,WAAlC,EAA+CC,cAA/C,QAAqE,SAArE;AAEA,gBAAe,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKN,SAAL;AACG,6CACMI,KADN;AAEGG,QAAAA,MAAM,+BAAMH,KAAK,CAACG,MAAZ,IAAoBF,MAAM,CAACG,OAA3B;AAFT;;AAKH,SAAKP,YAAL;AACG,aAAOG,KAAK,CAACK,MAAN,CAAa,UAACC,KAAD;AAAA,eAAWA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OAA/B;AAAA,OAAb,CAAP;;AAEH,SAAKN,WAAL;AACG,0CAAWE,KAAX,IAAkBC,MAAM,CAACG,OAAzB;;AAEH,SAAKL,cAAL;AACG,aAAOC,KAAK,CAACK,MAAN,CAAa,UAACC,KAAD;AAAA,eAAWA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACG,OAA/B;AAAA,OAAb,CAAP;;AAEH;AACG,aAAOJ,KAAP;AAjBN;AAmBF,CApBD","sourcesContent":["import { SET_ALERT, REMOVE_ALERT, SET_SUCCESS, REMOVE_SUCCESS } from \"../type\";\n\nexport default (state, action) => {\n   switch (action.type) {\n      case SET_ALERT:\n         return {\n            ...state,\n            alerts: [...state.alerts, action.payload]\n         }\n\n      case REMOVE_ALERT:\n         return state.filter((alert) => alert.id !== action.payload);\n\n      case SET_SUCCESS:\n         return [...state, action.payload];\n\n      case REMOVE_SUCCESS:\n         return state.filter((alert) => alert.id !== action.payload);\n\n      default:\n         return state;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}