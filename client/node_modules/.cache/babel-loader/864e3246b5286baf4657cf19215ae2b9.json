{"ast":null,"code":"import _defineProperty from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{withGoogleMap,GoogleMap,withScriptjs,InfoWindow,Marker}from\"react-google-maps\";import Geocode from\"react-geocode\";import Autocomplete from'react-google-autocomplete';import{Descriptions}from'antd';import GridContainer from\"../../components/Grid/GridContainer.js\";import GridItem from\"../../components/Grid/GridItem.js\";import CustomInput from\"../../components/CustomInput/CustomInput.js\";var _require=require(\"react-google-maps/lib/components/addons/MarkerWithLabel\"),MarkerWithLabel=_require.MarkerWithLabel;Geocode.setApiKey(\"AIzaSyAbdUmXPU-qAIQbcI8-3NVSCuILdg14Ypc\");Geocode.enableDebug();var LocationSearchModal=/*#__PURE__*/function(_React$Component){_inherits(LocationSearchModal,_React$Component);var _super=_createSuper(LocationSearchModal);function LocationSearchModal(){var _this;_classCallCheck(this,LocationSearchModal);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={address:'',city:'',area:'',state:'',zoom:15,height:400,mapPosition:{lat:0,lng:0},markerPosition:{lat:0,lng:0}};_this.getCity=function(addressArray){var city='';for(var i=0;i<addressArray.length;i++){if(addressArray[i].types[0]&&'administrative_area_level_2'===addressArray[i].types[0]){city=addressArray[i].long_name;return city;}}};_this.getArea=function(addressArray){var area='';for(var i=0;i<addressArray.length;i++){if(addressArray[i].types[0]){for(var j=0;j<addressArray[i].types.length;j++){if('sublocality_level_1'===addressArray[i].types[j]||'locality'===addressArray[i].types[j]){area=addressArray[i].long_name;return area;}}}}};_this.getState=function(addressArray){var state='';for(var i=0;i<addressArray.length;i++){for(var _i=0;_i<addressArray.length;_i++){if(addressArray[_i].types[0]&&'administrative_area_level_1'===addressArray[_i].types[0]){state=addressArray[_i].long_name;return state;}}}};_this.onChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.onInfoWindowClose=function(event){};_this.onMarkerDragEnd=function(event){var newLat=event.latLng.lat(),newLng=event.latLng.lng();Geocode.fromLatLng(newLat,newLng).then(function(response){var address=response.results[0].formatted_address,addressArray=response.results[0].address_components,city=_this.getCity(addressArray),area=_this.getArea(addressArray),state=_this.getState(addressArray);_this.setState({address:address?address:'',area:area?area:'',city:city?city:'',state:state?state:'',markerPosition:{lat:newLat,lng:newLng},mapPosition:{lat:newLat,lng:newLng}});},function(error){console.error(error);});};_this.onPlaceSelected=function(place){console.log('plc',place);var address=place.formatted_address,addressArray=place.address_components,city=_this.getCity(addressArray),area=_this.getArea(addressArray),state=_this.getState(addressArray),latValue=place.geometry.location.lat(),lngValue=place.geometry.location.lng();console.log('latvalue',latValue);console.log('lngValue',lngValue);// Set these values in the state.\n_this.setState({address:address?address:'',area:area?area:'',city:city?city:'',state:state?state:'',markerPosition:{lat:latValue,lng:lngValue},mapPosition:{lat:latValue,lng:lngValue}});};return _this;}_createClass(LocationSearchModal,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(navigator.geolocation){navigator.geolocation.getCurrentPosition(function(position){_this2.setState({mapPosition:{lat:position.coords.latitude,lng:position.coords.longitude},markerPosition:{lat:position.coords.latitude,lng:position.coords.longitude}},function(){Geocode.fromLatLng(position.coords.latitude,position.coords.longitude).then(function(response){console.log(response);var address=response.results[0].formatted_address,addressArray=response.results[0].address_components,city=_this2.getCity(addressArray),area=_this2.getArea(addressArray),state=_this2.getState(addressArray);console.log('city',city,area,state);_this2.setState({address:address?address:'',area:area?area:'',city:city?city:'',state:state?state:''});},function(error){console.error(error);});});});}else{console.error(\"Geolocation is not supported by this browser!\");}}},{key:\"render\",value:function render(){var _this3=this;var AsyncMap=withScriptjs(withGoogleMap(function(props){return/*#__PURE__*/React.createElement(GoogleMap,{defaultZoom:_this3.state.zoom,defaultCenter:{lat:_this3.state.mapPosition.lat,lng:_this3.state.mapPosition.lng}},/*#__PURE__*/React.createElement(Marker,{google:_this3.props.google,name:'Dolores park',draggable:true,onDragEnd:_this3.onMarkerDragEnd,position:{lat:_this3.state.markerPosition.lat,lng:_this3.state.markerPosition.lng}}),/*#__PURE__*/React.createElement(InfoWindow,{onClose:_this3.onInfoWindowClose,position:{lat:_this3.state.markerPosition.lat+0.0018,lng:_this3.state.markerPosition.lng}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{style:{padding:0,margin:0}},_this3.state.address))),/*#__PURE__*/React.createElement(Marker,null),/*#__PURE__*/React.createElement(Autocomplete,{style:{width:'100%',height:'40px',paddingLeft:'16px',marginTop:'2px',marginBottom:'2rem'},onPlaceSelected:_this3.onPlaceSelected,types:['(regions)']}));}));return/*#__PURE__*/React.createElement(\"div\",{style:{padding:'3rem',margin:'0 auto',maxWidth:1000}},/*#__PURE__*/React.createElement(Descriptions,{bordered:true},/*#__PURE__*/React.createElement(Descriptions.Item,{label:\"City\"},this.state.city),/*#__PURE__*/React.createElement(Descriptions.Item,{label:\"Area\"},this.state.area),/*#__PURE__*/React.createElement(Descriptions.Item,{label:\"State\"},this.state.state),/*#__PURE__*/React.createElement(Descriptions.Item,{label:\"Address\"},this.state.address)),/*#__PURE__*/React.createElement(AsyncMap,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAbdUmXPU-qAIQbcI8-3NVSCuILdg14Ypc&libraries=places\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:this.state.height}}),mapElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}})}));}}]);return LocationSearchModal;}(React.Component);export default LocationSearchModal;","map":{"version":3,"sources":["/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/src/pages/LandingPage/GoogleMap.js"],"names":["React","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","Descriptions","GridContainer","GridItem","CustomInput","require","MarkerWithLabel","setApiKey","enableDebug","LocationSearchModal","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","getCity","addressArray","i","length","types","long_name","getArea","j","getState","onChange","event","setState","target","name","value","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","newLng","fromLatLng","then","response","results","formatted_address","address_components","error","console","onPlaceSelected","place","log","latValue","geometry","location","lngValue","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","AsyncMap","props","google","padding","margin","width","paddingLeft","marginTop","marginBottom","maxWidth","Component"],"mappings":"+zBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAwBC,SAAxB,CAAmCC,YAAnC,CAAiDC,UAAjD,CAA6DC,MAA7D,KAA2E,mBAA3E,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,OAASC,YAAT,KAA6B,MAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,wCAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,mCAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6CAAxB,C,aAE4BC,OAAO,CAAC,yDAAD,C,CAA3BC,e,UAAAA,e,CAGRP,OAAO,CAACQ,SAAR,CAAkB,yCAAlB,EACAR,OAAO,CAACS,WAAR,G,GAEMC,CAAAA,mB,2XAEFC,K,CAAQ,CACJC,OAAO,CAAE,EADL,CAEJC,IAAI,CAAE,EAFF,CAGJC,IAAI,CAAE,EAHF,CAIJH,KAAK,CAAE,EAJH,CAKJI,IAAI,CAAE,EALF,CAMJC,MAAM,CAAE,GANJ,CAOJC,WAAW,CAAE,CACTC,GAAG,CAAE,CADI,CAETC,GAAG,CAAE,CAFI,CAPT,CAWJC,cAAc,CAAE,CACZF,GAAG,CAAE,CADO,CAEZC,GAAG,CAAE,CAFO,CAXZ,C,OA6DRE,O,CAAU,SAACC,YAAD,CAAkB,CACxB,GAAIT,CAAAA,IAAI,CAAG,EAAX,CACA,IAAK,GAAIU,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,YAAY,CAACE,MAAjC,CAAyCD,CAAC,EAA1C,CAA8C,CAC1C,GAAID,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,GAA4B,gCAAkCH,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,CAAlE,CAA4F,CACxFZ,IAAI,CAAGS,YAAY,CAACC,CAAD,CAAZ,CAAgBG,SAAvB,CACA,MAAOb,CAAAA,IAAP,CACH,CACJ,CACJ,C,OAEDc,O,CAAU,SAACL,YAAD,CAAkB,CACxB,GAAIR,CAAAA,IAAI,CAAG,EAAX,CACA,IAAK,GAAIS,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,YAAY,CAACE,MAAjC,CAAyCD,CAAC,EAA1C,CAA8C,CAC1C,GAAID,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,CAAJ,CAA8B,CAC1B,IAAK,GAAIG,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGN,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBD,MAA1C,CAAkDI,CAAC,EAAnD,CAAuD,CACnD,GAAI,wBAA0BN,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBG,CAAtB,CAA1B,EAAsD,aAAeN,YAAY,CAACC,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBG,CAAtB,CAAzE,CAAmG,CAC/Fd,IAAI,CAAGQ,YAAY,CAACC,CAAD,CAAZ,CAAgBG,SAAvB,CACA,MAAOZ,CAAAA,IAAP,CACH,CACJ,CACJ,CACJ,CACJ,C,OAEDe,Q,CAAW,SAACP,YAAD,CAAkB,CACzB,GAAIX,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIY,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,YAAY,CAACE,MAAjC,CAAyCD,CAAC,EAA1C,CAA8C,CAC1C,IAAK,GAAIA,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGD,YAAY,CAACE,MAAjC,CAAyCD,EAAC,EAA1C,CAA8C,CAC1C,GAAID,YAAY,CAACC,EAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,GAA4B,gCAAkCH,YAAY,CAACC,EAAD,CAAZ,CAAgBE,KAAhB,CAAsB,CAAtB,CAAlE,CAA4F,CACxFd,KAAK,CAAGW,YAAY,CAACC,EAAD,CAAZ,CAAgBG,SAAxB,CACA,MAAOf,CAAAA,KAAP,CACH,CACJ,CACJ,CACJ,C,OAEDmB,Q,CAAW,SAACC,KAAD,CAAW,CAClB,MAAKC,QAAL,oBAAiBD,KAAK,CAACE,MAAN,CAAaC,IAA9B,CAAqCH,KAAK,CAACE,MAAN,CAAaE,KAAlD,GACH,C,OAEDC,iB,CAAoB,SAACL,KAAD,CAAW,CAAG,C,OAElCM,e,CAAkB,SAACN,KAAD,CAAW,CACzB,GAAIO,CAAAA,MAAM,CAAGP,KAAK,CAACQ,MAAN,CAAarB,GAAb,EAAb,CACIsB,MAAM,CAAGT,KAAK,CAACQ,MAAN,CAAapB,GAAb,EADb,CAGAnB,OAAO,CAACyC,UAAR,CAAmBH,MAAnB,CAA2BE,MAA3B,EAAmCE,IAAnC,CACI,SAAAC,QAAQ,CAAI,CACR,GAAM/B,CAAAA,OAAO,CAAG+B,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC,CACIvB,YAAY,CAAGqB,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBE,kBADvC,CAEIjC,IAAI,CAAG,MAAKQ,OAAL,CAAaC,YAAb,CAFX,CAGIR,IAAI,CAAG,MAAKa,OAAL,CAAaL,YAAb,CAHX,CAIIX,KAAK,CAAG,MAAKkB,QAAL,CAAcP,YAAd,CAJZ,CAKA,MAAKU,QAAL,CAAc,CACVpB,OAAO,CAAGA,OAAD,CAAYA,OAAZ,CAAsB,EADrB,CAEVE,IAAI,CAAGA,IAAD,CAASA,IAAT,CAAgB,EAFZ,CAGVD,IAAI,CAAGA,IAAD,CAASA,IAAT,CAAgB,EAHZ,CAIVF,KAAK,CAAGA,KAAD,CAAUA,KAAV,CAAkB,EAJf,CAKVS,cAAc,CAAE,CACZF,GAAG,CAAEoB,MADO,CAEZnB,GAAG,CAAEqB,MAFO,CALN,CASVvB,WAAW,CAAE,CACTC,GAAG,CAAEoB,MADI,CAETnB,GAAG,CAAEqB,MAFI,CATH,CAAd,EAcH,CArBL,CAsBI,SAAAO,KAAK,CAAI,CACLC,OAAO,CAACD,KAAR,CAAcA,KAAd,EACH,CAxBL,EA0BH,C,OAEDE,e,CAAkB,SAACC,KAAD,CAAW,CACzBF,OAAO,CAACG,GAAR,CAAY,KAAZ,CAAmBD,KAAnB,EACA,GAAMtC,CAAAA,OAAO,CAAGsC,KAAK,CAACL,iBAAtB,CACIvB,YAAY,CAAG4B,KAAK,CAACJ,kBADzB,CAEIjC,IAAI,CAAG,MAAKQ,OAAL,CAAaC,YAAb,CAFX,CAGIR,IAAI,CAAG,MAAKa,OAAL,CAAaL,YAAb,CAHX,CAIIX,KAAK,CAAG,MAAKkB,QAAL,CAAcP,YAAd,CAJZ,CAKI8B,QAAQ,CAAGF,KAAK,CAACG,QAAN,CAAeC,QAAf,CAAwBpC,GAAxB,EALf,CAMIqC,QAAQ,CAAGL,KAAK,CAACG,QAAN,CAAeC,QAAf,CAAwBnC,GAAxB,EANf,CAQA6B,OAAO,CAACG,GAAR,CAAY,UAAZ,CAAwBC,QAAxB,EACAJ,OAAO,CAACG,GAAR,CAAY,UAAZ,CAAwBI,QAAxB,EAEA;AACA,MAAKvB,QAAL,CAAc,CACVpB,OAAO,CAAGA,OAAD,CAAYA,OAAZ,CAAsB,EADrB,CAEVE,IAAI,CAAGA,IAAD,CAASA,IAAT,CAAgB,EAFZ,CAGVD,IAAI,CAAGA,IAAD,CAASA,IAAT,CAAgB,EAHZ,CAIVF,KAAK,CAAGA,KAAD,CAAUA,KAAV,CAAkB,EAJf,CAKVS,cAAc,CAAE,CACZF,GAAG,CAAEkC,QADO,CAEZjC,GAAG,CAAEoC,QAFO,CALN,CASVtC,WAAW,CAAE,CACTC,GAAG,CAAEkC,QADI,CAETjC,GAAG,CAAEoC,QAFI,CATH,CAAd,EAcH,C,4GAjJmB,iBAChB,GAAIC,SAAS,CAACC,WAAd,CAA2B,CACvBD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,SAAAC,QAAQ,CAAI,CACjD,MAAI,CAAC3B,QAAL,CAAc,CACVf,WAAW,CAAE,CACTC,GAAG,CAAEyC,QAAQ,CAACC,MAAT,CAAgBC,QADZ,CAET1C,GAAG,CAAEwC,QAAQ,CAACC,MAAT,CAAgBE,SAFZ,CADH,CAKV1C,cAAc,CAAE,CACZF,GAAG,CAAEyC,QAAQ,CAACC,MAAT,CAAgBC,QADT,CAEZ1C,GAAG,CAAEwC,QAAQ,CAACC,MAAT,CAAgBE,SAFT,CALN,CAAd,CAUI,UAAM,CACF9D,OAAO,CAACyC,UAAR,CAAmBkB,QAAQ,CAACC,MAAT,CAAgBC,QAAnC,CAA6CF,QAAQ,CAACC,MAAT,CAAgBE,SAA7D,EAAwEpB,IAAxE,CACI,SAAAC,QAAQ,CAAI,CACRK,OAAO,CAACG,GAAR,CAAYR,QAAZ,EACA,GAAM/B,CAAAA,OAAO,CAAG+B,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC,CACIvB,YAAY,CAAGqB,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBE,kBADvC,CAEIjC,IAAI,CAAG,MAAI,CAACQ,OAAL,CAAaC,YAAb,CAFX,CAGIR,IAAI,CAAG,MAAI,CAACa,OAAL,CAAaL,YAAb,CAHX,CAIIX,KAAK,CAAG,MAAI,CAACkB,QAAL,CAAcP,YAAd,CAJZ,CAKA0B,OAAO,CAACG,GAAR,CAAY,MAAZ,CAAoBtC,IAApB,CAA0BC,IAA1B,CAAgCH,KAAhC,EACA,MAAI,CAACqB,QAAL,CAAc,CACVpB,OAAO,CAAGA,OAAD,CAAYA,OAAZ,CAAsB,EADrB,CAEVE,IAAI,CAAGA,IAAD,CAASA,IAAT,CAAgB,EAFZ,CAGVD,IAAI,CAAGA,IAAD,CAASA,IAAT,CAAgB,EAHZ,CAIVF,KAAK,CAAGA,KAAD,CAAUA,KAAV,CAAkB,EAJf,CAAd,EAMH,CAfL,CAgBI,SAAAoC,KAAK,CAAI,CACLC,OAAO,CAACD,KAAR,CAAcA,KAAd,EACH,CAlBL,EAqBH,CAhCL,EAiCH,CAlCD,EAmCH,CApCD,IAoCO,CACHC,OAAO,CAACD,KAAR,CAAc,+CAAd,EACH,CACJ,C,uCA2GQ,iBACL,GAAMgB,CAAAA,QAAQ,CAAGlE,YAAY,CACzBF,aAAa,CACT,SAAAqE,KAAK,qBACD,oBAAC,SAAD,EACI,WAAW,CAAE,MAAI,CAACrD,KAAL,CAAWI,IAD5B,CAEI,aAAa,CAAE,CAAEG,GAAG,CAAE,MAAI,CAACP,KAAL,CAAWM,WAAX,CAAuBC,GAA9B,CAAmCC,GAAG,CAAE,MAAI,CAACR,KAAL,CAAWM,WAAX,CAAuBE,GAA/D,CAFnB,eAOI,oBAAC,MAAD,EACI,MAAM,CAAE,MAAI,CAAC6C,KAAL,CAAWC,MADvB,CAEI,IAAI,CAAE,cAFV,CAGI,SAAS,CAAE,IAHf,CAII,SAAS,CAAE,MAAI,CAAC5B,eAJpB,CAKI,QAAQ,CAAE,CAAEnB,GAAG,CAAE,MAAI,CAACP,KAAL,CAAWS,cAAX,CAA0BF,GAAjC,CAAsCC,GAAG,CAAE,MAAI,CAACR,KAAL,CAAWS,cAAX,CAA0BD,GAArE,CALd,EAPJ,cAcI,oBAAC,UAAD,EACI,OAAO,CAAE,MAAI,CAACiB,iBADlB,CAEI,QAAQ,CAAE,CAAElB,GAAG,CAAG,MAAI,CAACP,KAAL,CAAWS,cAAX,CAA0BF,GAA1B,CAAgC,MAAxC,CAAiDC,GAAG,CAAE,MAAI,CAACR,KAAL,CAAWS,cAAX,CAA0BD,GAAhF,CAFd,eAII,4CACI,4BAAM,KAAK,CAAE,CAAE+C,OAAO,CAAE,CAAX,CAAcC,MAAM,CAAE,CAAtB,CAAb,EAAyC,MAAI,CAACxD,KAAL,CAAWC,OAApD,CADJ,CAJJ,CAdJ,cAsBI,oBAAC,MAAD,MAtBJ,cA0BI,oBAAC,YAAD,EACI,KAAK,CAAE,CACHwD,KAAK,CAAE,MADJ,CAEHpD,MAAM,CAAE,MAFL,CAGHqD,WAAW,CAAE,MAHV,CAIHC,SAAS,CAAE,KAJR,CAKHC,YAAY,CAAE,MALX,CADX,CAQI,eAAe,CAAE,MAAI,CAACtB,eAR1B,CASI,KAAK,CAAE,CAAC,WAAD,CATX,EA1BJ,CADC,EADI,CADY,CAA7B,CA6CA,mBACI,2BAAK,KAAK,CAAE,CAAEiB,OAAO,CAAE,MAAX,CAAmBC,MAAM,CAAE,QAA3B,CAAqCK,QAAQ,CAAE,IAA/C,CAAZ,eACI,oBAAC,YAAD,EAAc,QAAQ,KAAtB,eACI,oBAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAC,MAAzB,EAAiC,KAAK7D,KAAL,CAAWE,IAA5C,CADJ,cAEI,oBAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAC,MAAzB,EAAiC,KAAKF,KAAL,CAAWG,IAA5C,CAFJ,cAGI,oBAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAC,OAAzB,EAAkC,KAAKH,KAAL,CAAWA,KAA7C,CAHJ,cAII,oBAAC,YAAD,CAAc,IAAd,EAAmB,KAAK,CAAC,SAAzB,EAAoC,KAAKA,KAAL,CAAWC,OAA/C,CAJJ,CADJ,cAQI,oBAAC,QAAD,EACI,YAAY,CAAC,sGADjB,CAEI,cAAc,cACV,2BAAK,KAAK,CAAE,CAAEI,MAAM,OAAR,CAAZ,EAHR,CAKI,gBAAgB,cACZ,2BAAK,KAAK,CAAE,CAAEA,MAAM,CAAE,KAAKL,KAAL,CAAWK,MAArB,CAAZ,EANR,CAQI,UAAU,cACN,2BAAK,KAAK,CAAE,CAAEA,MAAM,OAAR,CAAZ,EATR,EARJ,CADJ,CAuBH,C,iCA5O6BtB,KAAK,CAAC+E,S,EAgPxC,cAAe/D,CAAAA,mBAAf","sourcesContent":["import React from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport { Descriptions } from 'antd';\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport CustomInput from \"../../components/CustomInput/CustomInput.js\";\n\nconst { MarkerWithLabel } = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\n\n\nGeocode.setApiKey(\"AIzaSyAbdUmXPU-qAIQbcI8-3NVSCuILdg14Ypc\");\nGeocode.enableDebug();\n\nclass LocationSearchModal extends React.Component {\n\n    state = {\n        address: '',\n        city: '',\n        area: '',\n        state: '',\n        zoom: 15,\n        height: 400,\n        mapPosition: {\n            lat: 0,\n            lng: 0,\n        },\n        markerPosition: {\n            lat: 0,\n            lng: 0,\n        }\n    }\n\n\n    componentDidMount() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                this.setState({\n                    mapPosition: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    markerPosition: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    }\n                },\n                    () => {\n                        Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\n                            response => {\n                                console.log(response)\n                                const address = response.results[0].formatted_address,\n                                    addressArray = response.results[0].address_components,\n                                    city = this.getCity(addressArray),\n                                    area = this.getArea(addressArray),\n                                    state = this.getState(addressArray);\n                                console.log('city', city, area, state);\n                                this.setState({\n                                    address: (address) ? address : '',\n                                    area: (area) ? area : '',\n                                    city: (city) ? city : '',\n                                    state: (state) ? state : '',\n                                })\n                            },\n                            error => {\n                                console.error(error);\n                            }\n                        );\n\n                    })\n            });\n        } else {\n            console.error(\"Geolocation is not supported by this browser!\");\n        }\n    };\n\n\n    getCity = (addressArray) => {\n        let city = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\n                city = addressArray[i].long_name;\n                return city;\n            }\n        }\n    };\n\n    getArea = (addressArray) => {\n        let area = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0]) {\n                for (let j = 0; j < addressArray[i].types.length; j++) {\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n                        area = addressArray[i].long_name;\n                        return area;\n                    }\n                }\n            }\n        }\n    };\n\n    getState = (addressArray) => {\n        let state = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            for (let i = 0; i < addressArray.length; i++) {\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n                    state = addressArray[i].long_name;\n                    return state;\n                }\n            }\n        }\n    };\n\n    onChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    onInfoWindowClose = (event) => { };\n\n    onMarkerDragEnd = (event) => {\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng();\n\n        Geocode.fromLatLng(newLat, newLng).then(\n            response => {\n                const address = response.results[0].formatted_address,\n                    addressArray = response.results[0].address_components,\n                    city = this.getCity(addressArray),\n                    area = this.getArea(addressArray),\n                    state = this.getState(addressArray);\n                this.setState({\n                    address: (address) ? address : '',\n                    area: (area) ? area : '',\n                    city: (city) ? city : '',\n                    state: (state) ? state : '',\n                    markerPosition: {\n                        lat: newLat,\n                        lng: newLng\n                    },\n                    mapPosition: {\n                        lat: newLat,\n                        lng: newLng\n                    },\n                })\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n\n    onPlaceSelected = (place) => {\n        console.log('plc', place);\n        const address = place.formatted_address,\n            addressArray = place.address_components,\n            city = this.getCity(addressArray),\n            area = this.getArea(addressArray),\n            state = this.getState(addressArray),\n            latValue = place.geometry.location.lat(),\n            lngValue = place.geometry.location.lng();\n\n        console.log('latvalue', latValue)\n        console.log('lngValue', lngValue)\n\n        // Set these values in the state.\n        this.setState({\n            address: (address) ? address : '',\n            area: (area) ? area : '',\n            city: (city) ? city : '',\n            state: (state) ? state : '',\n            markerPosition: {\n                lat: latValue,\n                lng: lngValue\n            },\n            mapPosition: {\n                lat: latValue,\n                lng: lngValue\n            },\n        })\n    };\n\n    render() {\n        const AsyncMap = withScriptjs(\n            withGoogleMap(\n                props => (\n                    <GoogleMap\n                        defaultZoom={this.state.zoom}\n                        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n                    >\n                        {/* InfoWindow on top of marker */}\n\n                        {/*Marker*/}\n                        <Marker\n                            google={this.props.google}\n                            name={'Dolores park'}\n                            draggable={true}\n                            onDragEnd={this.onMarkerDragEnd}\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n                        />\n                        <InfoWindow\n                            onClose={this.onInfoWindowClose}\n                            position={{ lat: (this.state.markerPosition.lat + 0.0018), lng: this.state.markerPosition.lng }}\n                        >\n                            <div>\n                                <span style={{ padding: 0, margin: 0 }}>{this.state.address}</span>\n                            </div>\n                        </InfoWindow>\n                        <Marker />\n\n\n                        {/* For Auto complete Search Box */}\n                        <Autocomplete\n                            style={{\n                                width: '100%',\n                                height: '40px',\n                                paddingLeft: '16px',\n                                marginTop: '2px',\n                                marginBottom: '2rem'\n                            }}\n                            onPlaceSelected={this.onPlaceSelected}\n                            types={['(regions)']}\n                        />\n                    </GoogleMap>\n                )\n            )\n        );\n\n        return (\n            <div style={{ padding: '3rem', margin: '0 auto', maxWidth: 1000 }}>\n                <Descriptions bordered>\n                    <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\n                    <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\n                    <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\n                    <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n                </Descriptions>\n                \n                <AsyncMap\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAbdUmXPU-qAIQbcI8-3NVSCuILdg14Ypc&libraries=places\"\n                    loadingElement={\n                        <div style={{ height: `100%` }} />\n                    }\n                    containerElement={\n                        <div style={{ height: this.state.height }} />\n                    }\n                    mapElement={\n                        <div style={{ height: `100%` }} />\n                    }\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default LocationSearchModal;"]},"metadata":{},"sourceType":"module"}