{"ast":null,"code":"import _defineProperty from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";// core components\nimport GridContainer from\"../../components/Grid/GridContainer.js\";import GridItem from\"../../components/Grid/GridItem.js\";import CustomInput from\"../../components/CustomInput/CustomInput.js\";import Button from\"../../components/CustomButtons/Button.js\";import Card from\"../../components/Card/Card.js\";import CardBody from\"../../components/Card/CardBody.js\";import CardHeader from\"../../components/Card/CardHeader.js\";import styles from\"../../assets/jss/material-kit-react/views/landingPageSections/workStyle.js\";import Alert from\"../Components/Alert\";// context\nimport PostContext from\"../../context/post/postContext\";import AlertContext from\"../../context/alert/alertContext\";var useStyles=makeStyles(styles);var PostMake=function PostMake(){var classes=useStyles();var _React$useState=React.useState(\"cardHidden\"),_React$useState2=_slicedToArray(_React$useState,2),cardAnimaton=_React$useState2[0],setCardAnimation=_React$useState2[1];setTimeout(function(){setCardAnimation(\"\");},700);var alertContext=useContext(AlertContext);var setAlert=alertContext.setAlert;var postContext=useContext(PostContext);var addPost=postContext.addPost;var _useState=useState({title:\"\",body:\"\"}),_useState2=_slicedToArray(_useState,2),post=_useState2[0],setPost=_useState2[1];var title=post.title,body=post.body;var onChange=function onChange(e){return setPost(_objectSpread(_objectSpread({},post),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){if(title===\"\"||body===\"\"){setAlert(\"Please fill in title and body\",\"warning\");}e.preventDefault();addPost(post);setAlert(\"Post sent successfully!\",\"success\");};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.container},/*#__PURE__*/React.createElement(Alert,null),/*#__PURE__*/React.createElement(GridContainer,{justify:\"center\"},/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:8},/*#__PURE__*/React.createElement(Card,{className:classes[cardAnimaton]},/*#__PURE__*/React.createElement(CardHeader,{color:\"info\",className:classes.cardHeader},/*#__PURE__*/React.createElement(\"h4\",null,\"What's on your mind?\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(GridContainer,null,/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:6},/*#__PURE__*/React.createElement(CustomInput,{labelText:\"post title...\",id:\"post title\",formControlProps:{fullWidth:true},inputProps:{type:\"text\",name:\"title\",onChange:onChange}})),/*#__PURE__*/React.createElement(CustomInput,{labelText:\"post body...\",id:\"message\",formControlProps:{fullWidth:true,className:classes.textArea},inputProps:{type:\"text\",name:\"body\",onChange:onChange,multiline:true,rows:5}}),/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:4},/*#__PURE__*/React.createElement(Button,{color:\"info\",onClick:onSubmit},\"Post\")))))))));};export default PostMake;","map":{"version":3,"sources":["/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/src/pages/HomePage/PostMake.js"],"names":["React","useContext","useState","makeStyles","GridContainer","GridItem","CustomInput","Button","Card","CardBody","CardHeader","styles","Alert","PostContext","AlertContext","useStyles","PostMake","classes","cardAnimaton","setCardAnimation","setTimeout","alertContext","setAlert","postContext","addPost","title","body","post","setPost","onChange","e","target","name","value","onSubmit","preventDefault","container","cardHeader","fullWidth","type","className","textArea","multiline","rows"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// core components\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport CustomInput from \"../../components/CustomInput/CustomInput.js\";\nimport Button from \"../../components/CustomButtons/Button.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\n\nimport styles from \"../../assets/jss/material-kit-react/views/landingPageSections/workStyle.js\";\nimport Alert from \"../Components/Alert\";\n\n// context\nimport PostContext from \"../../context/post/postContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst useStyles = makeStyles(styles);\n\nconst PostMake = () => {\n   const classes = useStyles();\n   const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n   setTimeout(function () {\n      setCardAnimation(\"\");\n   }, 700);\n\n   const alertContext = useContext(AlertContext);\n   const { setAlert } = alertContext;\n   const postContext = useContext(PostContext);\n   const { addPost } = postContext;\n   const [post, setPost] = useState({\n      title: \"\",\n      body: \"\",\n   });\n\n   const { title, body } = post;\n   const onChange = (e) => setPost({ ...post, [e.target.name]: e.target.value });\n\n   const onSubmit = (e) => {\n      if (title === \"\" || body === \"\"){\n         setAlert(\"Please fill in title and body\", \"warning\");\n      }\n      e.preventDefault();\n      addPost(post);\n      setAlert(\"Post sent successfully!\", \"success\");\n   };\n\n   return (\n      <div>\n         <div className={classes.container}>\n            <Alert />\n            <GridContainer justify=\"center\">\n               <GridItem xs={12} sm={12} md={8}>\n                  <Card className={classes[cardAnimaton]}>\n                     <CardHeader color=\"info\" className={classes.cardHeader}>\n                        <h4>What's on your mind?</h4>\n                     </CardHeader>\n\n                     <CardBody>\n                        <GridContainer>\n                           <GridItem xs={12} sm={12} md={6}>\n                              <CustomInput\n                                 labelText=\"post title...\"\n                                 id=\"post title\"\n                                 formControlProps={{\n                                    fullWidth: true,\n                                 }}\n                                 inputProps={{\n                                    type: \"text\",\n                                    name: \"title\",\n                                    onChange: onChange,\n                                 }}\n                              />\n                           </GridItem>\n                           <CustomInput\n                              labelText=\"post body...\"\n                              id=\"message\"\n                              formControlProps={{\n                                 fullWidth: true,\n                                 className: classes.textArea,\n                              }}\n                              inputProps={{\n                                 type: \"text\",\n                                 name: \"body\",\n                                 onChange: onChange,\n                                 multiline: true,\n                                 rows: 5,\n                              }}\n                           />\n                           <GridItem xs={12} sm={12} md={4}>\n                              <Button color=\"info\" onClick={onSubmit}>Post</Button>\n                           </GridItem>\n                        </GridContainer>\n                     </CardBody>\n                  </Card>\n               </GridItem>\n            </GridContainer>\n         </div>\n      </div>\n   );\n};\n\nexport default PostMake;\n"]},"metadata":{},"sourceType":"module"}