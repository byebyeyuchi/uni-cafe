{"ast":null,"code":"import _defineProperty from \"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/src/pages/LandingPage/GoogleMap.js\";\nimport React from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport { Descriptions } from 'antd';\n\nvar _require = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\"),\n    MarkerWithLabel = _require.MarkerWithLabel;\n\nGeocode.setApiKey(\"AIzaSyAbdUmXPU-qAIQbcI8-3NVSCuILdg14Ypc\");\nGeocode.enableDebug();\n\nvar LocationSearchModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocationSearchModal, _React$Component);\n\n  var _super = _createSuper(LocationSearchModal);\n\n  function LocationSearchModal() {\n    var _this;\n\n    _classCallCheck(this, LocationSearchModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPosition: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    _this.getCity = function (addressArray) {\n      var city = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\n          city = addressArray[i].long_name;\n          return city;\n        }\n      }\n    };\n\n    _this.getArea = function (addressArray) {\n      var area = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (var j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n              area = addressArray[i].long_name;\n              return area;\n            }\n          }\n        }\n      }\n    };\n\n    _this.getState = function (addressArray) {\n      var state = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        for (var _i = 0; _i < addressArray.length; _i++) {\n          if (addressArray[_i].types[0] && 'administrative_area_level_1' === addressArray[_i].types[0]) {\n            state = addressArray[_i].long_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.onInfoWindowClose = function (event) {};\n\n    _this.onMarkerDragEnd = function (event) {\n      var newLat = event.latLng.lat(),\n          newLng = event.latLng.lng();\n      Geocode.fromLatLng(newLat, newLng).then(function (response) {\n        var address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = _this.getCity(addressArray),\n            area = _this.getArea(addressArray),\n            state = _this.getState(addressArray);\n\n        _this.setState({\n          address: address ? address : '',\n          area: area ? area : '',\n          city: city ? city : '',\n          state: state ? state : '',\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      }, function (error) {\n        console.error(error);\n      });\n    };\n\n    _this.onPlaceSelected = function (place) {\n      console.log('plc', place);\n\n      var address = place.formatted_address,\n          addressArray = place.address_components,\n          city = _this.getCity(addressArray),\n          area = _this.getArea(addressArray),\n          state = _this.getState(addressArray),\n          latValue = place.geometry.location.lat(),\n          lngValue = place.geometry.location.lng();\n\n      console.log('latvalue', latValue);\n      console.log('lngValue', lngValue); // Set these values in the state.\n\n      _this.setState({\n        address: address ? address : '',\n        area: area ? area : '',\n        city: city ? city : '',\n        state: state ? state : '',\n        markerPosition: {\n          lat: latValue,\n          lng: lngValue\n        },\n        mapPosition: {\n          lat: latValue,\n          lng: lngValue\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LocationSearchModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          _this2.setState({\n            mapPosition: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            },\n            markerPosition: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            }\n          }, function () {\n            Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(function (response) {\n              console.log(response);\n\n              var address = response.results[0].formatted_address,\n                  addressArray = response.results[0].address_components,\n                  city = _this2.getCity(addressArray),\n                  area = _this2.getArea(addressArray),\n                  state = _this2.getState(addressArray);\n\n              console.log('city', city, area, state);\n\n              _this2.setState({\n                address: address ? address : '',\n                area: area ? area : '',\n                city: city ? city : '',\n                state: state ? state : ''\n              });\n            }, function (error) {\n              console.error(error);\n            });\n          });\n        });\n      } else {\n        console.error(\"Geolocation is not supported by this browser!\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var AsyncMap = withScriptjs(withGoogleMap(function (props) {\n        return /*#__PURE__*/React.createElement(GoogleMap, {\n          defaultZoom: _this3.state.zoom,\n          defaultCenter: {\n            lat: _this3.state.mapPosition.lat,\n            lng: _this3.state.mapPosition.lng\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Marker, {\n          google: _this3.props.google,\n          name: 'Dolores park',\n          draggable: true,\n          onDragEnd: _this3.onMarkerDragEnd,\n          position: {\n            lat: _this3.state.markerPosition.lat,\n            lng: _this3.state.markerPosition.lng\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(InfoWindow, {\n          onClose: _this3.onInfoWindowClose,\n          position: {\n            lat: _this3.state.markerPosition.lat + 0.0018,\n            lng: _this3.state.markerPosition.lng\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }\n        }, _this3.state.address))), /*#__PURE__*/React.createElement(Marker, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Autocomplete, {\n          style: {\n            width: '100%',\n            height: '40px',\n            paddingLeft: '16px',\n            marginTop: '2px',\n            marginBottom: '2rem'\n          },\n          onPlaceSelected: _this3.onPlaceSelected,\n          types: ['(regions)'],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }\n        }));\n      }));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: '3rem',\n          margin: '0 auto',\n          maxWidth: 1000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Descriptions, {\n        bordered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n        label: \"City\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      }, this.state.city), /*#__PURE__*/React.createElement(Descriptions.Item, {\n        label: \"Area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, this.state.area), /*#__PURE__*/React.createElement(Descriptions.Item, {\n        label: \"State\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      }, this.state.state), /*#__PURE__*/React.createElement(Descriptions.Item, {\n        label: \"Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, this.state.address)), /*#__PURE__*/React.createElement(GridContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        labelText: \"Disabled\",\n        id: \"disabled\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          disabled: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        id: \"regular\",\n        inputProps: {\n          placeholder: \"Regular\"\n        },\n        formControlProps: {\n          fullWidth: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        labelText: \"With floating label\",\n        id: \"float\",\n        formControlProps: {\n          fullWidth: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(AsyncMap, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAbdUmXPU-qAIQbcI8-3NVSCuILdg14Ypc&libraries=places\",\n        loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }\n        }),\n        containerElement: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            height: this.state.height\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }\n        }),\n        mapElement: /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return LocationSearchModal;\n}(React.Component);\n\nexport default LocationSearchModal;","map":{"version":3,"sources":["/Users/yuqiliu/Desktop/PROJECT/js-proj/jojo/client/src/pages/LandingPage/GoogleMap.js"],"names":["React","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","Descriptions","require","MarkerWithLabel","setApiKey","enableDebug","LocationSearchModal","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","getCity","addressArray","i","length","types","long_name","getArea","j","getState","onChange","event","setState","target","name","value","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","newLng","fromLatLng","then","response","results","formatted_address","address_components","error","console","onPlaceSelected","place","log","latValue","geometry","location","lngValue","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","AsyncMap","props","google","padding","margin","width","paddingLeft","marginTop","marginBottom","maxWidth","fullWidth","disabled","placeholder","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport { Descriptions } from 'antd';\n\nconst { MarkerWithLabel } = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\n\n\nGeocode.setApiKey(\"AIzaSyAbdUmXPU-qAIQbcI8-3NVSCuILdg14Ypc\");\nGeocode.enableDebug();\n\nclass LocationSearchModal extends React.Component {\n\n    state = {\n        address: '',\n        city: '',\n        area: '',\n        state: '',\n        zoom: 15,\n        height: 400,\n        mapPosition: {\n            lat: 0,\n            lng: 0,\n        },\n        markerPosition: {\n            lat: 0,\n            lng: 0,\n        }\n    }\n\n\n    componentDidMount() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                this.setState({\n                    mapPosition: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    markerPosition: {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    }\n                },\n                    () => {\n                        Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(\n                            response => {\n                                console.log(response)\n                                const address = response.results[0].formatted_address,\n                                    addressArray = response.results[0].address_components,\n                                    city = this.getCity(addressArray),\n                                    area = this.getArea(addressArray),\n                                    state = this.getState(addressArray);\n                                console.log('city', city, area, state);\n                                this.setState({\n                                    address: (address) ? address : '',\n                                    area: (area) ? area : '',\n                                    city: (city) ? city : '',\n                                    state: (state) ? state : '',\n                                })\n                            },\n                            error => {\n                                console.error(error);\n                            }\n                        );\n\n                    })\n            });\n        } else {\n            console.error(\"Geolocation is not supported by this browser!\");\n        }\n    };\n\n\n    getCity = (addressArray) => {\n        let city = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\n                city = addressArray[i].long_name;\n                return city;\n            }\n        }\n    };\n\n    getArea = (addressArray) => {\n        let area = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0]) {\n                for (let j = 0; j < addressArray[i].types.length; j++) {\n                    if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n                        area = addressArray[i].long_name;\n                        return area;\n                    }\n                }\n            }\n        }\n    };\n\n    getState = (addressArray) => {\n        let state = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            for (let i = 0; i < addressArray.length; i++) {\n                if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n                    state = addressArray[i].long_name;\n                    return state;\n                }\n            }\n        }\n    };\n\n    onChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    onInfoWindowClose = (event) => { };\n\n    onMarkerDragEnd = (event) => {\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng();\n\n        Geocode.fromLatLng(newLat, newLng).then(\n            response => {\n                const address = response.results[0].formatted_address,\n                    addressArray = response.results[0].address_components,\n                    city = this.getCity(addressArray),\n                    area = this.getArea(addressArray),\n                    state = this.getState(addressArray);\n                this.setState({\n                    address: (address) ? address : '',\n                    area: (area) ? area : '',\n                    city: (city) ? city : '',\n                    state: (state) ? state : '',\n                    markerPosition: {\n                        lat: newLat,\n                        lng: newLng\n                    },\n                    mapPosition: {\n                        lat: newLat,\n                        lng: newLng\n                    },\n                })\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n\n    onPlaceSelected = (place) => {\n        console.log('plc', place);\n        const address = place.formatted_address,\n            addressArray = place.address_components,\n            city = this.getCity(addressArray),\n            area = this.getArea(addressArray),\n            state = this.getState(addressArray),\n            latValue = place.geometry.location.lat(),\n            lngValue = place.geometry.location.lng();\n\n        console.log('latvalue', latValue)\n        console.log('lngValue', lngValue)\n\n        // Set these values in the state.\n        this.setState({\n            address: (address) ? address : '',\n            area: (area) ? area : '',\n            city: (city) ? city : '',\n            state: (state) ? state : '',\n            markerPosition: {\n                lat: latValue,\n                lng: lngValue\n            },\n            mapPosition: {\n                lat: latValue,\n                lng: lngValue\n            },\n        })\n    };\n\n    render() {\n        const AsyncMap = withScriptjs(\n            withGoogleMap(\n                props => (\n                    <GoogleMap\n                        defaultZoom={this.state.zoom}\n                        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n                    >\n                        {/* InfoWindow on top of marker */}\n\n                        {/*Marker*/}\n                        <Marker\n                            google={this.props.google}\n                            name={'Dolores park'}\n                            draggable={true}\n                            onDragEnd={this.onMarkerDragEnd}\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n                        />\n                        <InfoWindow\n                            onClose={this.onInfoWindowClose}\n                            position={{ lat: (this.state.markerPosition.lat + 0.0018), lng: this.state.markerPosition.lng }}\n                        >\n                            <div>\n                                <span style={{ padding: 0, margin: 0 }}>{this.state.address}</span>\n                            </div>\n                        </InfoWindow>\n                        <Marker />\n\n\n                        {/* For Auto complete Search Box */}\n                        <Autocomplete\n                            style={{\n                                width: '100%',\n                                height: '40px',\n                                paddingLeft: '16px',\n                                marginTop: '2px',\n                                marginBottom: '2rem'\n                            }}\n                            onPlaceSelected={this.onPlaceSelected}\n                            types={['(regions)']}\n                        />\n                    </GoogleMap>\n                )\n            )\n        );\n\n        return (\n            <div style={{ padding: '3rem', margin: '0 auto', maxWidth: 1000 }}>\n                <Descriptions bordered>\n                    <Descriptions.Item label=\"City\">{this.state.city}</Descriptions.Item>\n                    <Descriptions.Item label=\"Area\">{this.state.area}</Descriptions.Item>\n                    <Descriptions.Item label=\"State\">{this.state.state}</Descriptions.Item>\n                    <Descriptions.Item label=\"Address\">{this.state.address}</Descriptions.Item>\n                </Descriptions>\n                <GridContainer>\n                <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                        labelText=\"Disabled\"\n                        id=\"disabled\"\n                        formControlProps={{\n                            fullWidth: true\n                        }}\n                        inputProps={{\n                            disabled: true\n                        }}\n                    />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                        <CustomInput\n                            id=\"regular\"\n                            inputProps={{\n                                placeholder: \"Regular\"\n                            }}\n                            formControlProps={{\n                                fullWidth: true\n                            }}\n                        />\n                </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n            <CustomInput\n                labelText=\"With floating label\"\n                id=\"float\"\n                formControlProps={{\n                    fullWidth: true\n                }}\n            />\n        </GridItem>\n                </GridContainer>\n                <AsyncMap\n                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAbdUmXPU-qAIQbcI8-3NVSCuILdg14Ypc&libraries=places\"\n                    loadingElement={\n                        <div style={{ height: `100%` }} />\n                    }\n                    containerElement={\n                        <div style={{ height: this.state.height }} />\n                    }\n                    mapElement={\n                        <div style={{ height: `100%` }} />\n                    }\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default LocationSearchModal;"]},"metadata":{},"sourceType":"module"}