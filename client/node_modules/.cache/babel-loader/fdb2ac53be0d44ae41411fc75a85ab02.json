{"ast":null,"code":"import _defineProperty from\"/Users/yuqiliu/Desktop/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/yuqiliu/Desktop/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/yuqiliu/Desktop/jojo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from\"react\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import InputAdornment from\"@material-ui/core/InputAdornment\";import Icon from\"@material-ui/core/Icon\";// @material-ui/icons\nimport Email from\"@material-ui/icons/Email\";// core components\nimport Header from\"components/Header/Header.js\";import HomeLinks from\"components/Header/HomeLinks.js\";import HeaderLinks from\"components/Header/HeaderLinks.js\";import Footer from\"components/Footer/Footer.js\";import GridContainer from\"components/Grid/GridContainer.js\";import GridItem from\"components/Grid/GridItem.js\";import Button from\"components/CustomButtons/Button.js\";import Card from\"components/Card/Card.js\";import CardBody from\"components/Card/CardBody.js\";import CardHeader from\"components/Card/CardHeader.js\";import CardFooter from\"components/Card/CardFooter.js\";import CustomInput from\"components/CustomInput/CustomInput.js\";import styles from\"assets/jss/material-kit-react/views/loginPage.js\";import image from\"assets/img/756721.jpg\";// context\nimport AuthContext from\"../../context/auth/authContext\";import AlertContext from\"../../context/alert/alertContext\";var useStyles=makeStyles(styles);var LoginPage=function LoginPage(props){var authContext=useContext(AuthContext);var alertContext=useContext(AlertContext);var login=authContext.login,error=authContext.error,clearErrors=authContext.clearErrors,isAuthenticated=authContext.isAuthenticated;var setAlert=alertContext.setAlert;var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var email=user.email,password=user.password;useEffect(function(){if(isAuthenticated){props.history.push(\"/\");// redirect to home page if authenticated\n}if(error===\"Invalid Credential\"){setAlert(error,\"error\");clearErrors();}// eslint-disable-next-line\n},[error,isAuthenticated,props.history]);var onChange=function onChange(e){setUser(_objectSpread(_objectSpread({},user),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();try{if(email===\"\"||password===\"\"){setAlert(\"Please fill in all the fields!\",\"warning\");}else{login({email:email,password:password});}}catch(err){console.log(err);}};var _React$useState=React.useState(\"cardHidden\"),_React$useState2=_slicedToArray(_React$useState,2),cardAnimaton=_React$useState2[0],setCardAnimation=_React$useState2[1];setTimeout(function(){setCardAnimation(\"\");},700);var classes=useStyles();var rest=Object.assign({},props);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,Object.assign({absolute:true,color:\"transparent\",brand:\"JOJO\",leftLinks:/*#__PURE__*/React.createElement(HomeLinks,null),rightLinks:/*#__PURE__*/React.createElement(HeaderLinks,null)},rest)),/*#__PURE__*/React.createElement(\"div\",{className:classes.pageHeader,style:{backgroundImage:\"url(\"+image+\")\",backgroundSize:\"cover\",backgroundPosition:\"top center\"}},/*#__PURE__*/React.createElement(\"div\",{className:classes.container},/*#__PURE__*/React.createElement(GridContainer,{justify:\"center\"},/*#__PURE__*/React.createElement(GridItem,{xs:12,sm:12,md:4},/*#__PURE__*/React.createElement(Card,{className:classes[cardAnimaton]},/*#__PURE__*/React.createElement(\"form\",{className:classes.form},/*#__PURE__*/React.createElement(CardHeader,{color:\"warning\",className:classes.cardHeader},/*#__PURE__*/React.createElement(\"h4\",null,\"Login\")),/*#__PURE__*/React.createElement(\"p\",{className:classes.divider},\"\\u30B4\\u30B4\\u30B4\\u30B4\\u30B4\\u30B4\\u30B4\\u30B4...\"),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CustomInput,{labelText:\"Email...\",id:\"email\",formControlProps:{fullWidth:true},inputProps:{type:\"email\",name:\"email\",onChange:onChange,endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},/*#__PURE__*/React.createElement(Email,{className:classes.inputIconsColor}))}}),/*#__PURE__*/React.createElement(CustomInput,{labelText:\"Password\",id:\"pass\",formControlProps:{fullWidth:true},inputProps:{type:\"password\",name:\"password\",onChange:onChange,endAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"end\"},/*#__PURE__*/React.createElement(Icon,{className:classes.inputIconsColor},\"lock_outline\")),autoComplete:\"off\"}})),/*#__PURE__*/React.createElement(CardFooter,{className:classes.cardFooter},/*#__PURE__*/React.createElement(Button,{simple:true,color:\"warning\",size:\"lg\",onClick:onSubmit},\"Get started\"))))))),/*#__PURE__*/React.createElement(Footer,{whiteFont:true})));};export default LoginPage;","map":{"version":3,"sources":["/Users/yuqiliu/Desktop/jojo/client/src/pages/LoginPage/LoginPage.js"],"names":["React","useState","useEffect","useContext","makeStyles","InputAdornment","Icon","Email","Header","HomeLinks","HeaderLinks","Footer","GridContainer","GridItem","Button","Card","CardBody","CardHeader","CardFooter","CustomInput","styles","image","AuthContext","AlertContext","useStyles","LoginPage","props","authContext","alertContext","login","error","clearErrors","isAuthenticated","setAlert","email","password","user","setUser","history","push","onChange","e","target","name","value","onSubmit","preventDefault","err","console","log","cardAnimaton","setCardAnimation","setTimeout","classes","rest","pageHeader","backgroundImage","backgroundSize","backgroundPosition","container","form","cardHeader","divider","fullWidth","type","endAdornment","inputIconsColor","autoComplete","cardFooter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Email from \"@material-ui/icons/Email\";\n\n// core components\nimport Header from \"components/Header/Header.js\";\nimport HomeLinks from \"components/Header/HomeLinks.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport styles from \"assets/jss/material-kit-react/views/loginPage.js\";\nimport image from \"assets/img/756721.jpg\";\n\n// context\nimport AuthContext from \"../../context/auth/authContext\";\nimport AlertContext from \"../../context/alert/alertContext\";\n\nconst useStyles = makeStyles(styles);\n\nconst LoginPage = (props) => {\n   const authContext = useContext(AuthContext);\n   const alertContext = useContext(AlertContext);\n   const { login, error, clearErrors, isAuthenticated } = authContext;\n   const { setAlert } = alertContext;\n\n   const [user, setUser] = useState({\n      email: \"\",\n      password: \"\",\n   });\n   const { email, password } = user;\n\n   useEffect(() => {\n      if (isAuthenticated) {\n         props.history.push(\"/\"); // redirect to home page if authenticated\n      }\n      if (error === \"Invalid Credential\") {\n         setAlert(error, \"error\");\n         clearErrors();\n      }\n      // eslint-disable-next-line\n   }, [error, isAuthenticated, props.history]);\n\n   const onChange = (e) => {\n      setUser({ ...user, [e.target.name]: e.target.value });\n   };\n\n   const onSubmit = (e) => {\n      e.preventDefault();\n      try {\n         if (email === \"\" || password === \"\") {\n            setAlert(\"Please fill in all the fields!\", \"warning\")\n         } else {\n            login({\n               email,\n               password,\n            });\n         }\n      } catch (err) {\n         console.log(err);\n      }\n   };\n\n   const [cardAnimaton, setCardAnimation] = React.useState(\"cardHidden\");\n   setTimeout(function () {\n      setCardAnimation(\"\");\n   }, 700);\n   const classes = useStyles();\n   const { ...rest } = props;\n   return (\n      <div>\n         <Header\n            absolute\n            color=\"transparent\"\n            brand=\"JOJO\"\n            leftLinks={<HomeLinks/>}\n            rightLinks={<HeaderLinks />}\n            {...rest}\n         />\n         {/* background */}\n         <div\n            className={classes.pageHeader}\n            style={{\n               backgroundImage: \"url(\" + image + \")\",\n               backgroundSize: \"cover\",\n               backgroundPosition: \"top center\",\n            }}\n         >\n            <div className={classes.container}>\n               <GridContainer justify=\"center\">\n                  <GridItem xs={12} sm={12} md={4}>\n                     <Card className={classes[cardAnimaton]}>\n                        <form className={classes.form}>\n                           <CardHeader\n                              color=\"warning\"\n                              className={classes.cardHeader}\n                           >\n                              <h4>Login</h4>\n                              \n                           </CardHeader>\n                           <p className={classes.divider}>\n                              ゴゴゴゴゴゴゴゴ...\n                           </p>\n                           <CardBody>\n                          \n                              <CustomInput\n                                 labelText=\"Email...\"\n                                 id=\"email\"\n                                 formControlProps={{\n                                    fullWidth: true,\n                                 }}\n                                 inputProps={{\n                                    type: \"email\",\n                                    name:\"email\",\n                                    onChange:onChange,\n                                    endAdornment: (\n                                       <InputAdornment position=\"end\">\n                                          <Email\n                                             className={classes.inputIconsColor}\n                                          />\n                                       </InputAdornment>\n                                    ),\n                                 }}\n                              />\n                              <CustomInput\n                                 labelText=\"Password\"\n                                 id=\"pass\"\n                                 formControlProps={{\n                                    fullWidth: true,\n                                 }}\n                                 inputProps={{\n                                    type: \"password\",\n                                    name:\"password\",\n                                    onChange:onChange,\n                                    endAdornment: (\n                                       <InputAdornment position=\"end\">\n                                          <Icon\n                                             className={classes.inputIconsColor}\n                                          >\n                                             lock_outline\n                                          </Icon>\n                                       </InputAdornment>\n                                    ),\n                                    autoComplete: \"off\",\n                                 }}\n                              />\n                           </CardBody>\n                           <CardFooter className={classes.cardFooter}>\n                              <Button\n                                 simple\n                                 color=\"warning\"\n                                 size=\"lg\"\n                                 onClick={onSubmit}\n                              >\n                                 Get started\n                              </Button>\n                           </CardFooter>\n                        </form>\n                     </Card>\n                  </GridItem>\n               </GridContainer>\n            </div>\n            <Footer whiteFont />\n         </div>\n      </div>\n   );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}